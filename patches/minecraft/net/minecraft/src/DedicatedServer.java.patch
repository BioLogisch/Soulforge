--- ../src_base/minecraft/net/minecraft/src/DedicatedServer.java
+++ ../src/minecraft/net/minecraft/src/DedicatedServer.java
@@ -7,6 +7,8 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Random;
+
+import soulforge.utils.CommonHandler;
 import net.minecraft.server.MinecraftServer;
 
 public class DedicatedServer extends MinecraftServer implements IServer
@@ -42,6 +44,8 @@
         {
             this.getLogAgent().logWarning("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
         }
+        
+        CommonHandler.instance().onServerStart(this);
 
         this.getLogAgent().logInfo("Loading properties");
         this.settings = new PropertyManager(new File("server.properties"), this.getLogAgent());
@@ -112,6 +116,8 @@
             this.getLogAgent().logWarning("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
             this.getLogAgent().logWarning("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
         }
+        
+        CommonHandler.instance().onServerStarted();
 
         this.setConfigurationManager(new DedicatedPlayerList(this));
         long var4 = System.nanoTime();
@@ -154,6 +160,7 @@
         this.setBuildLimit((this.getBuildLimit() + 8) / 16 * 16);
         this.setBuildLimit(MathHelper.clamp_int(this.getBuildLimit(), 64, 256));
         this.settings.setProperty("max-build-height", Integer.valueOf(this.getBuildLimit()));
+        if (!CommonHandler.instance().handleServerAboutToStart(this)) { return false; }
         this.getLogAgent().logInfo("Preparing level \"" + this.getFolderName() + "\"");
         this.loadAllWorlds(this.getFolderName(), this.getFolderName(), var9, var17, var8);
         long var12 = System.nanoTime() - var4;
@@ -174,7 +181,7 @@
             this.theRConThreadMain.startThread();
         }
 
-        return true;
+        return CommonHandler.instance().handleServerStarting(this);
     }
 
     public boolean canStructuresSpawn()
