--- ../src_base/minecraft_server/net/minecraft/src/ItemShears.java
+++ ../src/minecraft_server/net/minecraft/src/ItemShears.java
@@ -1,4 +1,9 @@
 package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+import soulforge.utils.IShearable;
 
 public class ItemShears extends Item
 {
@@ -12,7 +17,7 @@
 
     public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLiving par7EntityLiving)
     {
-        if (par3 != Block.leaves.blockID && par3 != Block.web.blockID && par3 != Block.tallGrass.blockID && par3 != Block.vine.blockID && par3 != Block.tripWire.blockID)
+        if (par3 != Block.leaves.blockID && par3 != Block.web.blockID && par3 != Block.tallGrass.blockID && par3 != Block.vine.blockID && par3 != Block.tripWire.blockID && !(Block.blocksList[par3] instanceof IShearable))
         {
             return super.onBlockDestroyed(par1ItemStack, par2World, par3, par4, par5, par6, par7EntityLiving);
         }
@@ -39,4 +44,34 @@
     {
         return par2Block.blockID != Block.web.blockID && par2Block.blockID != Block.leaves.blockID ? (par2Block.blockID == Block.cloth.blockID ? 5.0F : super.getStrVsBlock(par1ItemStack, par2Block)) : 15.0F;
     }
+    
+    @Override
+    public boolean useItemOnEntity(ItemStack itemstack, EntityLiving entity)
+    {
+        if (entity.worldObj.isRemote)
+        {
+            return false;
+        }
+        if (entity instanceof IShearable)
+        {
+            IShearable target = (IShearable)entity;
+            if (target.isShearable(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ))
+            {
+                ArrayList<ItemStack> drops = target.onSheared(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ,
+                        EnchantmentHelper.getEnchantmentLevel(Enchantment.fortune.effectId, itemstack));
+
+                Random rand = new Random();
+                for(ItemStack stack : drops)
+                {
+                    EntityItem ent = entity.entityDropItem(stack, 1.0F);
+                    ent.motionY += rand.nextFloat() * 0.05F;
+                    ent.motionX += (rand.nextFloat() - rand.nextFloat()) * 0.1F;
+                    ent.motionZ += (rand.nextFloat() - rand.nextFloat()) * 0.1F;
+                }
+                itemstack.damageItem(1, entity);
+            }
+            return true;
+        }
+        return false;
+    }
 }
